                    return render(request, 'authentication/register.html', context)

                if len(username) == 0:
                    messages.error(request, 'Enter username')
                    return render(request, 'authentication/register.html', context)

                user = User.objects.create_user(username=username, email=email)
                user.set_password(password)
                user.is_active = False
                user.save()
                uidb64 = urlsafe_base64_encode(force_bytes(user.pk))
                domain = get_current_site(request).domain
                link = reverse('activate', kwargs={
                    'uidb64': uidb64,
                    'token': token_generator.make_token(user)
                })
                email_subject = 'Activate your account'
                activate_url = 'http://' + domain + link
                email_body = f'Hi, {user.username}. Please use this link to verify your account\n{activate_url}'
                # Отправляем письмо на активацию аккаунта
                email = EmailMessage(
                    email_subject,
                    email_body,
                    'ailerdiskincsio@gmail.com',
                    [email],
                )
                # email.send(fail_silently=False)
                EmailThread(email).start()
                # fail_silently=False - если будет исключение, то всё упадёт
                messages.success(request, 'Account successfully created')
                return render(request, 'authentication/register.html', context)
        return render(request, 'authentication/register.html')